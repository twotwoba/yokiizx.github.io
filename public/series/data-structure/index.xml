<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Data Structure - Á≥ªÂàó - Hello World</title>
        <link>http://localhost:1313/series/data-structure/</link>
        <description>Data Structure - Á≥ªÂàó - Hello World</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>ericyuanovo@gmail.com (EricYuan)</managingEditor>
            <webMaster>ericyuanovo@gmail.com (EricYuan)</webMaster><lastBuildDate>Tue, 13 Feb 2024 17:54:23 &#43;0800</lastBuildDate><atom:link href="http://localhost:1313/series/data-structure/" rel="self" type="application/rss+xml" /><item>
    <title>ÂâçÁºÄÊ†ëÔºàÂ≠óÂÖ∏Ê†ëÔºâ</title>
    <link>http://localhost:1313/%E5%89%8D%E7%BC%80%E6%A0%91/</link>
    <pubDate>Tue, 13 Feb 2024 17:54:23 &#43;0800</pubDate><author>
        <name>EricYuan</name>
    </author><guid>http://localhost:1313/%E5%89%8D%E7%BC%80%E6%A0%91/</guid>
    <description><![CDATA[Ê¶ÇÂøµÂèäÂÆûÁé∞ÂâçÁºÄÊ†ëÔºå‰πüÂè´Â≠óÂÖ∏Ê†ëÔºåÂ∞±ÊòØ‰∏ÄÁßçÊï∞ÊçÆÁªìÊûÑÔºåÊØîÂ¶ÇÊúâ‰∏ÄÁªÑÂ≠óÁ¨¶‰∏≤ ['abc', 'ab', 'bc', 'bck']ÔºåÈÇ£‰πàÂÆÉÁöÑÂâçÁºÄÊ†ëÊòØËøôÊ†∑ÁöÑÔºö
Ê†∏ÂøÉÔºöÂ≠óÁ¨¶Âú®Ê†ëÁöÑÊ†ëÊûù‰∏äÔºåËäÇÁÇπ‰∏ä‰øùÂ≠òÁùÄ‰ø°ÊÅØ (ÂΩìÁÑ∂‰∏çÊòØËøô‰πàÊ≠ªÔºå‰∏™‰∫∫‰π†ÊÉØÔºåÁ®ãÂ∫èÊÄé‰πàÂÆûÁé∞ÈÉΩÊòØ ok ÁöÑ)ÔºåÂê´‰πâÂ¶Ç‰∏ãÔºö
pÔºöÈÄöËøáÊ†ëÊûùÂ≠óÁ¨¶ÁöÑÂ≠óÁ¨¶‰∏≤Êï∞Èáè. &ndash; ÂèØ‰ª•Êü•ËØ¢ÂâçÁºÄÊï∞Èáè eÔºö‰ª•Ê†ëÊûùÂ≠óÁ¨¶ÁªìÂ∞æÁöÑÂ≠óÁ¨¶‰∏≤Êï∞Èáè. &ndash; ÂèØ‰ª•Êü•ËØ¢Â≠óÁ¨¶‰∏≤ ÂØπÂ∫îÁöÑÊï∞ÊçÆÁªìÊûÑÂ¶Ç‰∏ãÔºö
class TrieNode { constructor(pass = 0, end = 0) { this.pass = pass // ÈÄöËøá‰∏ãÊé•Ê†ëÊûùÂ≠óÁ¨¶ÁöÑÂ≠óÁ¨¶‰∏≤Êï∞Èáè this.end = end // ‰ª•‰∏äÊé•Ê†ëÊûùÂ≠óÁ¨¶ÁªìÂ∞æÁöÑÂ≠óÁ¨¶‰∏≤Êï∞Èáè this.next = {} // {char: TrieNode} ÁöÑ map ÈõÜÔºå Â≠óÁ¨¶ÊúâÈôêÔºåÊúâ‰∫õÊïôÁ®ã‰πüÁî®Êï∞ÁªÑÂÆûÁé∞Ôºõnext ÁöÑ key Â∞±ÂèØ‰ª•ÊäΩË±°‰∏∫Ê†ëÊûù } } class Trie { constructor() { this.root = new TrieNode() } insert(str) { let p = this.root for (const c of str) { if (!]]></description>
</item><item>
    <title>‰∫åÂèâÊ†ë</title>
    <link>http://localhost:1313/%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
    <pubDate>Mon, 15 Jan 2024 21:01:56 &#43;0800</pubDate><author>
        <name>EricYuan</name>
    </author><guid>http://localhost:1313/%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
    <description><![CDATA[‰∫åÂèâÊ†ëclass Node&lt;V&gt; { V value; Node left; Node right; } ÈÄíÂΩíÂ∫è/** * 1 * / \ * 2 3 * / \ / \ * 4 5 6 7 * * ‰∏ãÊñπ go ÂáΩÊï∞Â∞±ÊòØÂØπËøôÊ£µ‰∫åÂèâÊ†ëÁöÑÈÄíÂΩíÂ∫èÈÅçÂéÜ * ÊØè‰∏™ËäÇÁÇπÈÉΩ‰ºöÁªìÊûú 3 Ê¨°ÔºåÂàÜÂà´Âú®1Ôºå2Ôºå3‰ΩçÁΩÆÔºõÂÆûÈôÖÈÅçÂéÜÈ°∫Â∫èÔºö * * 1(1)Ôºå2(1)Ôºå4(1)Ôºå4(2)Ôºå4(3)Ôºå * 2(2)Ôºå5(1)Ôºå5(2)Ôºå5(3)Ôºå2(3)Ôºå * 1(2)Ôºå3(1)Ôºå6(1)Ôºå6(2)Ôºå6(3)Ôºå * 3(2)Ôºå7(1)Ôºå7(2)Ôºå7(3)Ôºå3(3)Ôºå1(3) * * ÂâçÂ∫èÔºàÊ†πÂ∑¶Âè≥Ôºà1ÔºâÔºâÁªìÊûúÔºö1Ôºå2Ôºå4Ôºå5Ôºå3Ôºå6Ôºå7 * ÂâçÂ∫èÔºàÂ∑¶Ê†πÂè≥Ôºà2ÔºâÔºâÁªìÊûúÔºö4Ôºå2Ôºå5Ôºå1Ôºå6Ôºå3Ôºå7 * ÂâçÂ∫èÔºàÂ∑¶Âè≥Ê†πÔºà3ÔºâÔºâÁªìÊûúÔºö4Ôºå5Ôºå2Ôºå6Ôºå7Ôºå3Ôºå1 */ public void go(Node head) { if(head == null) return; // 1 go(head.left); // 2 go(head.]]></description>
</item><item>
    <title>ÈìæË°®</title>
    <link>http://localhost:1313/%E9%93%BE%E8%A1%A8/</link>
    <pubDate>Tue, 09 Jan 2024 20:10:19 &#43;0800</pubDate><author>
        <name>EricYuan</name>
    </author><guid>http://localhost:1313/%E9%93%BE%E8%A1%A8/</guid>
    <description><![CDATA[ÈìæË°®class Node&lt;V&gt; { V value; Node next; } class Node&lt;V&gt; { V value; Node next; Node last; } ÂØπ‰∫éÈìæË°®ÁÆóÊ≥ïÔºåÂú®Èù¢ËØï‰∏≠Ôºå‰∏ÄÂÆöÂ∞ΩÈáèÁî®Âà∞Á©∫Èó¥Â§çÊùÇÂ∫¶ÊúÄÂ∞èÁöÑÊñπÊ≥ïÔºà‰∏çÁÑ∂Âá≠Âï•Áî®Âí±ÊòØÂêß üê∂Ôºâ„ÄÇ
ÈìæË°®„ÄåÊç¢Â§¥„ÄçÊÉÖÂÜµÊìç‰ΩúÈìæË°®Âá∫Áé∞„ÄåÊç¢Â§¥„ÄçÁöÑÊÉÖÂÜµÔºåÂáΩÊï∞ÁöÑÈÄíÂΩíË∞ÉÁî®ÂΩ¢ÂºèÂ∫îËØ•ÊòØ head = func(head.next)ÔºåÊâÄ‰ª•ÂáΩÊï∞Âú®ËÆæËÆ°ÁöÑÊó∂ÂÄôÂ∞±Â∫îËØ•Êúâ‰∏Ä‰∏™ Node Á±ªÂûãÁöÑËøîÂõûÂÄºÔºåÊØîÂ¶ÇÂèçËΩ¨ÈìæË°®„ÄÇ
Âì®ÂÖµÂÆàÂç´„ÄåÂì®ÂÖµÂÆàÂç´„ÄçÊòØÈìæË°®‰∏≠ÁöÑÂ∏∏Áî®ÊäÄÂ∑ß„ÄÇÈÄöËøáÂú®ÈìæË°®Â§¥ÈÉ®ÊàñÂ∞æÈÉ®Ê∑ªÂä†ÂÆàÂç´ËäÇÁÇπÔºåÂèØ‰ª•ÁÆÄÂåñÂØπËæπÁïåÊÉÖÂÜµÁöÑÂ§ÑÁêÜ„ÄÇ
ÈìæË°®‰∏≠Â∏∏Áî®ÁöÑÊäÄÂ∑ß-Âø´ÊÖ¢ÊåáÈíà ÊâæÂà∞ÈìæË°®ÁöÑ‰∏≠ÁÇπ„ÄÅ‰∏≠ÁÇπÂâç‰∏Ä‰∏™„ÄÅ‰∏≠ÁÇπÂêé‰∏Ä‰∏™Ëøô‰∏™ÊòØÁ°¨ÁºñÁ†ÅËÉΩÂäõÔºåÈúÄË¶ÅÂ§ßÈáèÁªÉ‰π†ÊâìÂ•ΩÂü∫Êú¨Âäü„ÄÇ
/** * Â•áÊï∞ÁöÑ‰∏≠ÁÇπ; ÂÅ∂Êï∞ÁöÑ‰∏≠ÁÇπÈù†Ââç‰∏Ä‰Ωç */ Node s = head; Node f = head; while (f.next != null &amp;&amp; f.next.next != null) { s = s.next; f = f.next.next; } /** * Â•áÊï∞ÁöÑ‰∏≠ÁÇπ; ÂÅ∂Êï∞ÁöÑ‰∏≠ÁÇπÈù†Âêé‰∏Ä‰Ωç lc.876 easy */ while (f != null &amp;&amp; f.]]></description>
</item><item>
    <title>Âõæ</title>
    <link>http://localhost:1313/%E5%9B%BE/</link>
    <pubDate>Sun, 19 Feb 2023 16:03:41 &#43;0800</pubDate><author>
        <name>EricYuan</name>
    </author><guid>http://localhost:1313/%E5%9B%BE/</guid>
    <description><![CDATA[ÂõæËÆ∫Âü∫Á°Ä ÈÇªÊé•Ë°®&amp;ÈÇªÊé•Áü©Èòµ ‰∏äÈù¢ËøôÂπÖÊúâÂêëÂõæÔºåÂàÜÂà´Áî®ÈÇªÊé•Ë°®ÂíåÈÇªÊé•Áü©ÈòµÂÆûÁé∞Â¶Ç‰∏ãÔºö
// ÈÇªÊé•Ë°®ÔºåÂΩìÁÑ∂‰πüÂèØ‰ª•Áî® hashmap Êù•ÂÆûÁé∞ const graph: Array&lt;number[]&gt; = [[1, 3, 4], [2, 3, 4], [3], [4], []] // ÈÇªÊé•Áü©ÈòµÔºåÂΩìÁÑ∂ÂÖÉÁ¥†‰∏ç‰ªÖ‰ªÖÂè™ËÉΩ‰∏∫ Boolean ÂÄº const graph: Array&lt;boolean[]&gt; = [ [false, true, false, true, true], [false, false, true, true, true], [false, false, false, true, false], [false, false, false, false, true], [false, false, false, false, false] ] ÈÇªÊé•Ë°®ÔºöÂç†Áî®Á©∫Èó¥Â∞ëÔºõÂà§Êñ≠‰∏§‰∏™ËäÇÁÇπÊòØÂê¶Áõ∏ÈÇªÔºåÈúÄË¶ÅÈÅçÂéÜÊâÄÊúâÁõ∏ÈÇªÁöÑËäÇÁÇπ ÈÇªÊé•Áü©ÈòµÔºöÂ≠òÂú®ÂæàÂ§öÁ©∫Ê¥ûÔºåÂç†Áî®Á©∫Èó¥Â§ßÔºõÂà§Êñ≠‰∏§‰∏™ËäÇÁÇπÊòØÂê¶Áõ∏ÈÇªÁÆÄÂçïÔºåËé∑Âèñ matrix[i][j] ÁöÑÂÄºÂç≥ÂèØ ÂõæÁöÑÈÅçÂéÜÂõæÁöÑÈÅçÂéÜÔºåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÂõæÂèØËÉΩÊúâÁéØÔºö
ÂøÖÈ°ªË¶ÅÊúâ visited ÂèòÈáèÊù•Èò≤Ê≠¢Ëµ∞ÂÖ•Ê≠ªÂæ™ÁéØ ÈÅçÂéÜËøáÁ®ã‰∏≠ÂèØ‰ª•‰ΩøÁî® onPath ÂèòÈáèÂà§Êñ≠ÂΩìÊó∂ÁöÑË∑ØÂæÑÊòØÂê¶ÊàêÁéØÔºàÁ±ªÊØîË¥™ÂêÉËõáËõáË∫´Ôºâ /** visited Á±ª‰ººË¥™ÂêÉËõáËµ∞ËøáÁöÑÊâÄÊúâË∑ØÂæÑÔºõonPath Á±ª‰ººËÆæËõáË∫´ */ // ËÆ∞ÂΩïÊâÄÊúâÈÅçÂéÜËøáÁöÑËäÇÁÇπ const visited = [] // ËÆ∞ÂΩï‰ªéËµ∑ÁÇπÂà∞ÂΩìÂâçËäÇÁÇπÁöÑË∑ØÂæÑ const onPath = [] /* ÂõæÈÅçÂéÜÊ°ÜÊû∂ DFS */ function traverse(graph, s) { if (visited[s]) return // ÁªèËøáËäÇÁÇπ sÔºåÊ†áËÆ∞‰∏∫Â∑≤ÈÅçÂéÜ visited[s] = true // ÂÅöÈÄâÊã©ÔºöÊ†áËÆ∞ËäÇÁÇπ s Âú®Ë∑ØÂæÑ‰∏ä onPath[s] = true for (const neighbor of graph.]]></description>
</item><item>
    <title>ÂçïË∞ÉÈòüÂàó</title>
    <link>http://localhost:1313/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/</link>
    <pubDate>Tue, 31 Jan 2023 09:15:05 &#43;0800</pubDate><author>
        <name>EricYuan</name>
    </author><guid>http://localhost:1313/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/</guid>
    <description><![CDATA[Ê¶ÇÂøµÊ†àÊúâÂçïË∞ÉÊ†àÔºåÈòüÂàóËá™ÁÑ∂‰πüÊúâÂçïË∞ÉÈòüÂàóÔºåÊÄßË¥®‰πüÊòØ‰∏ÄÊ†∑ÁöÑÔºå‰øùÊåÅÈòüÂàóÂÜÖÁöÑÂÖÉÁ¥†ÊúâÂ∫èÔºåÂçïË∞ÉÈÄíÂ¢ûÊàñÈÄíÂáè„ÄÇ
ÂÖ∂ÂÆûÂä®ÊÄÅÊ±ÇÊûÅÂÄºÈ¶ñÂÖàÂèØ‰ª•ËÅîÊÉ≥Âà∞ÁöÑÂ∫îËØ•ÊòØ „Äå‰ºòÂÖàÈòüÂàó„ÄçÔºå‰ΩÜÊòØÔºå‰ºòÂÖàÈòüÂàóÊó†Ê≥ïÊª°Ë∂≥**„ÄåÂÖàËøõÂÖàÂá∫„Äç**ÁöÑÊó∂Èó¥È°∫Â∫èÔºåÊâÄ‰ª•ÂçïË∞ÉÈòüÂàóÂ∫îËøêËÄåÁîü„ÄÇ
// ÂÖ≥ÈîÆÁÇπ, ‰øùÊåÅÂçïË∞ÉÊÄßÔºåÂÖ∂ÊãçÂπ≥ÊïàÊûú‰∏éÂçïË∞ÉÊ†à‰∏ÄËá¥ while (q.length &amp;&amp; num (&lt;= | &gt;=) q[q.length - 1]) { q.pop() } q.push(num) Âú∫ÊôØÁªô‰Ω†‰∏Ä‰∏™Êï∞ÁªÑ windowÔºåÂ∑≤Áü•ÂÖ∂ÊúÄÂÄº‰∏∫ AÔºåÂ¶ÇÊûúÁªô window ‰∏≠Ê∑ªÂä†‰∏Ä‰∏™Êï∞ BÔºåÈÇ£‰πàÊØîËæÉ‰∏Ä‰∏ã A Âíå B Â∞±ÂèØ‰ª•Á´ãÂç≥ÁÆóÂá∫Êñ∞ÁöÑÊúÄÂÄºÔºõ‰ΩÜÂ¶ÇÊûúË¶Å‰ªé window Êï∞ÁªÑ‰∏≠ÂáèÂ∞ë‰∏Ä‰∏™Êï∞ÔºåÂ∞±‰∏çËÉΩÁõ¥Êé•ÂæóÂà∞ÊúÄÂÄº‰∫ÜÔºåÂõ†‰∏∫Â¶ÇÊûúÂáèÂ∞ëÁöÑËøô‰∏™Êï∞ÊÅ∞Â•ΩÊòØ AÔºåÂ∞±ÈúÄË¶ÅÈÅçÂéÜ window ‰∏≠ÁöÑÊâÄÊúâÂÖÉÁ¥†ÈáçÊñ∞ÂØªÊâæÊñ∞ÁöÑÊúÄÂÄº„ÄÇ
ÁªÉ‰∏ÄÁªÉ lc239. ÊªëÂä®Á™óÂè£ÊúÄÂ§ßÂÄº hardÂä®ÊÄÅËÆ°ÁÆóÊûÅÂÄºÔºåÁõ¥Êé•ÂëΩ‰∏≠ÂçïË∞ÉÈòüÂàóÁöÑ‰ΩøÁî®Êù°‰ª∂„ÄÇ
/** * @param {number[]} nums * @param {number} k * @return {number[]} */ var maxSlidingWindow = function (nums, k) { let res = [] const monoQueue = [] for (let i = 0; i &lt; nums.]]></description>
</item><item>
    <title>ÂçïË∞ÉÊ†à</title>
    <link>http://localhost:1313/%E5%8D%95%E8%B0%83%E6%A0%88/</link>
    <pubDate>Tue, 31 Jan 2023 09:14:58 &#43;0800</pubDate><author>
        <name>EricYuan</name>
    </author><guid>http://localhost:1313/%E5%8D%95%E8%B0%83%E6%A0%88/</guid>
    <description><![CDATA[Ê¶ÇÂøµÂèäÂÆûÁé∞Ê†àÔºåÂêåÁ´ØËøõÂêåÁ´ØÂá∫ÔºåÂÖ∑ÊúâÂÖàËøõÂêéÂá∫ÁöÑÁâπÊÄßÔºåÂΩìÊ†àÂÜÖÊâÄÊúâÂÖÉÁ¥†ÂÖ∑ÊúâÂçïË∞ÉÊÄß(ÈÄíÂ¢û/ÈÄíÂáè)Â∞±ÊòØ‰∏Ä‰∏™ÂçïË∞ÉÊ†à‰∫Ü„ÄÇ
Ëá™Ë°åÂπ≤È¢ÑÂçïË∞ÉÊ†àÁöÑÂÆûÁé∞ÔºöÂΩì‰∏Ä‰∏™ÂÖÉÁ¥†ÂÖ•Ê†àÊó∂Á†¥Âùè‰∫ÜÂçïË∞ÉÊÄßÔºåÈÇ£‰πàÂ∞± pop Ê†àÈ°∂ÔºàÂèØËÉΩÈúÄË¶ÅËø≠‰ª£ÔºâÔºåÁõ¥Âà∞ËÉΩ‰ΩøÂæóÊñ∞Âä†ÂÖ•ÁöÑÂÖÉÁ¥†‰øùÊåÅÊ†àÁöÑÂçïË∞ÉÊÄß„ÄÇ
for (const item of arr) { while(stack.length &amp;&amp; item (&gt;= | &lt;=) stack[stack.length - 1]) { stack.pop() } stack.push(item) } Ê†àÂ≠òÂÇ®ÁöÑ‰ø°ÊÅØÔºåÂèØ‰ª•ÊòØÁ¥¢Âºï„ÄÅÂÖÉÁ¥†ÔºåÊ†πÊçÆÂÆûÈôÖÊÉÖÂÜµËøõË°åÂ§ÑÁêÜ ÁÅµÊ¥ªÊéßÂà∂ÈÅçÂéÜÈ°∫Â∫èÊù•ÁÆÄÂåñÁÆóÊ≥ï
Âú∫ÊôØÂçïË∞ÉÊ†àÁöÑÂ∫îÁî®Âú∫ÊôØÊØîËæÉÂçï‰∏ÄÔºåÂè™Â§ÑÁêÜ‰∏ÄÁ±ªÂÖ∏ÂûãÁöÑÈóÆÈ¢òÔºöÊØîÂ¶Ç „Äå‰∏ã‰∏Ä‰∏™Êõ¥/ÊúÄ&hellip;„Äç ‰πãÁ±ªÁöÑÈóÆÈ¢òÔºåÂè¶‰∏ÄÁ±ªÊòØÊé•Èõ®Ê∞¥ÔºåÊü±Áä∂Âõæ‰∏≠ÁöÑÊúÄÂ§ßÁü©ÂΩ¢ËøôÁßçÂèòÂΩ¢ÈóÆÈ¢ò„ÄÇ
ÁªÉ‰∏ÄÁªÉ lc.402 ÁßªÊéâ K ‰ΩçÊï∞Â≠óÂàÜÊûêÔºö‰∏∫‰∫ÜËÆ©Êï∞Â≠óÊúÄÂ∞èÔºå‰ªéÂ∑¶ÂæÄÂè≥ÈÅçÂéÜÔºåÂ∑¶‰æß‰∏∫È´ò‰ΩçÔºåÊâÄ‰ª•È´ò‰ΩçË∂äÂ∞èË∂äÂ•ΩÔºåÈÇ£‰πà‰ªéÂ∑¶ÂæÄÂè≥ÈÅçÂéÜÁöÑËøáÁ®ã‰∏≠ÔºåÂΩìÁ¥¢Âºï‰ΩçÁΩÆÁöÑÂÖÉÁ¥† index &gt; index + 1ÔºåÊó∂ÔºåÊää index ‰ΩçÁΩÆÁöÑÊï∞Â≠óÂà†ÊéâÂç≥ÂèØ„ÄÇ
/** * @param {string} num * @param {number} k * @return {string} */ var removeKdigits = function (num, k) { const nums = num.split(&#39;&#39;) const stack = [] for (const el of num) { while (stack.]]></description>
</item><item>
    <title>ÁºìÂ≠òÊ∑òÊ±∞ÁÆóÊ≥ï -- LRU</title>
    <link>http://localhost:1313/lru/</link>
    <pubDate>Fri, 23 Sep 2022 14:43:45 &#43;0800</pubDate><author>
        <name>EricYuan</name>
    </author><guid>http://localhost:1313/lru/</guid>
    <description><![CDATA[ÁºìÂ≠òÊ∑òÊ±∞ÁÆóÊ≥ï
LRULRUÔºàLeast recently usedÔºåÊúÄËøëÊúÄÂ∞ë‰ΩøÁî®Ôºâ„ÄÇ
Êàë‰∏™‰∫∫ÊÑüËßâËøô‰∏™ÂëΩÂêçÂ∞ë‰∫Ü‰∏™Âä®ËØçÔºåËÆ©‰∫∫ÁêÜËß£Ëµ∑Êù•ÊÄ™ÊÄ™ÁöÑÔºåÁºìÂ≠òÊ∑òÊ±∞ÁÆóÊ≥ïÂòõÔºåÊ∑òÊ±∞ÊúÄËøëÊúÄÂ∞ë‰ΩøÁî®„ÄÇ
ÂÆÉÁöÑÊ†∏ÂøÉÊó∂ÔºöÂ¶ÇÊûúÊï∞ÊçÆÊúÄËøëË¢´ËÆøÈóÆËøáÔºåÈÇ£‰πàÂ∞ÜÊù•Ë¢´ËÆøÈóÆÁöÑÂá†Áéá‰πüÊõ¥È´ò„ÄÇ
ÁÆÄÂçïÂÆûÁé∞LRU ‰∏ÄËà¨‰ΩøÁî®ÂèåÂêëÈìæË°®+ÂìàÂ∏åË°®ÂÆûÁé∞ÔºåÂú® JavaScript ‰∏≠Êàë‰ΩøÁî® Map Êï∞ÊçÆÁªìÊûÑÊù•ÂÆûÁé∞ÁºìÂ≠òÔºåÂõ†‰∏∫ Map ÂèØ‰ª•‰øùËØÅÂä†ÂÖ•ÁºìÂ≠òÁöÑÂÖàÂêéÈ°∫Â∫èÔºå
‰∏çÂêåÁöÑÊòØÔºåËøôÈáåÊòØÊää Map cache ÁöÑÂ∞æÂΩìÂ§¥ÔºåÂ§¥ÂΩìÂ∞æ„ÄÇ
class LRU { constructor(size) { this.cache = new Map() this.size = size } // Êñ∞Â¢ûÊó∂ÔºåÂÖàÊ£ÄÊµãÊòØÂê¶Â∑≤ÁªèÂ≠òÂú® put(key, value) { if (this.cache.has(key)) this.cache.delete(key) this.cache.set(key, value) // Ê£ÄÊü•ÊòØÂê¶Ë∂ÖÂá∫ÂÆπÈáè if (this.cache.size &gt; this.size) { this.cache.delete(this.cache.keys().next().value) // Âà†Èô§Map cache ÁöÑÁ¨¨‰∏Ä‰∏™Êï∞ÊçÆ } } // ËÆøÈóÆÊó∂ÔºåÈôÑ‰ª∂ÈáçÊñ∞ËøõÂÖ•ÁºìÂ≠òÊ±†ÁöÑÂä®‰Ωú get(key) { if (!this.cache.has(key)) return -1 const temp = this.cache.get(key) this.cache.delete(key) this.cache.set(key, temp) return temp } } ÂàÜÊûêÔºö]]></description>
</item><item>
    <title>‰ºòÂÖàÈòüÂàó</title>
    <link>http://localhost:1313/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</link>
    <pubDate>Fri, 23 Sep 2022 14:43:36 &#43;0800</pubDate><author>
        <name>EricYuan</name>
    </author><guid>http://localhost:1313/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</guid>
    <description><![CDATA[JavaScript ‰∏≠Ê≤°ÊúâÂÜÖÁΩÆ‰ºòÂÖàÈòüÂàóËøô‰∏™Êï∞ÊçÆÁªìÊûÑÔºåÈúÄË¶ÅËá™Â∑±Êù•ÂÆûÁé∞‰∏Ä‰∏ã~üëª
class PriorityQueue { constructor(data, cmp) { this.data = data this.cmp = cmp for (let i = data.length &gt;&gt; 1; i &gt;= 0; --i) { this.down(i) } } down(i) { let left = 2 * i + 1 while (left &lt; this.data.length) { let temp if (left + 1) { temp = this.cmp(this.data[left + 1], this.data[i]) ? left + 1 : i } temp = this.cmp(this.data[temp], this.data[left]) ? temp : left if (temp === i) { break } this.]]></description>
</item></channel>
</rss>
