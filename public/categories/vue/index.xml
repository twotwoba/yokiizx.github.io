<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Vue - 分类 - Hello World</title>
        <link>http://localhost:1313/categories/vue/</link>
        <description>Vue - 分类 - Hello World</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>ericyuanovo@gmail.com (EricYuan)</managingEditor>
            <webMaster>ericyuanovo@gmail.com (EricYuan)</webMaster><lastBuildDate>Tue, 30 Apr 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/categories/vue/" rel="self" type="application/rss+xml" /><item>
    <title>Vue 源码中的设计美学</title>
    <link>http://localhost:1313/vue%E6%BA%90%E7%A0%81%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E7%BE%8E%E5%AD%A6/</link>
    <pubDate>Tue, 30 Apr 2024 00:00:00 &#43;0000</pubDate><author>
        <name>EricYuan</name>
    </author><guid>http://localhost:1313/vue%E6%BA%90%E7%A0%81%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E7%BE%8E%E5%AD%A6/</guid>
    <description><![CDATA[ 为什么能通过 this.xxx 就能访问到对应的 methods 和 data js
// test function sayHello() {} ]]></description>
</item><item>
    <title>Vue2响应式原理</title>
    <link>http://localhost:1313/vue%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/</link>
    <pubDate>Wed, 26 Oct 2022 09:58:34 &#43;0800</pubDate><author>
        <name>EricYuan</name>
    </author><guid>http://localhost:1313/vue%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/</guid>
    <description><![CDATA[核心VUE2 的响应式原理实现主要基于：
Object.defineProperty(obj, prop, descriptor) 观察者模式 init - reactive 化Vue 初始化实例时，通过 Object.defineProperty 为 data 中的所有数据添加 setter/getter。这个过程称为 reactive 化。
所以：
vue 监听不到 data 中的对象属性的增加和删除，必须在初始化的时候就声明好对象的属性。
解决方案：或者使用 Vue 提供的 $set 方法；也可以用 Object.assign({}, source, addObj) 去创建一个新对象来触发更新。
Vue 也监听不到数组索引和长度的变化，因为当数据是数组时，Vue 会直接停止对数据属性的监测。至于为什么这么做，尤大的解释是：解决性能问题。
解决方案：新增用 $set，删除用 splice，Vue 对数组的一些方法进行了重写来实现响应式。
看下 defineReactive 源码：
js
// 以下所有代码为简化后的核心代码，详细的见vue2的gihub仓库哈 export function defineReactive(obj: object, key: string, val?: any, ...otehrs) { const dep = new Dep() Object.defineProperty(obj, key, { enumerable: true, configurable: true, get: function reactiveGetter() { if (Dep.]]></description>
</item></channel>
</rss>
